version: '3.8'

services:
  demo-integration:
    image: "demo-integration-sidecar:latest"
    container_name: "app-integration"
    ports:
      - "8080:8080"
      - "3500:3500"
    environment:
      SPRING_PROFILES_ACTIVE: docker  # Active le profil "docker" dans l'application
    volumes:
      - ./src/main/resources/docker/myapp.jar:/app/myapp.jar
      - ./src/main/resources/input:/app/input
    depends_on:
      - kafka
      - postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    networks:
      - kafka-net
    depends_on:
      - zookeeper
    environment:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      # https://github.com/dapr/components-contrib/issues/3113
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092 ,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_REST_CONTENT_TYPE: application/json
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  akhq:
    image: tchiotludo/akhq
    container_name: akhq
    ports:
      - "9090:8080"
    depends_on:
      - kafka
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:29092"
              schema-registry:
                url: "http://schema-registry:8085"
              connect:
                - name: "connect"
                  url: "http://connect:8083"
    networks:
      - kafka-net

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"  # Port d'écoute de PostgreSQL
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: demo
    networks:
      - pg-net

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    ports:
      - "5050:80"  # Port pour accéder à pgAdmin depuis le navigateur
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@example.com"  # Adresse e-mail par défaut pour l'authentification
      PGADMIN_DEFAULT_PASSWORD: "admin"  # Mot de passe par défaut pour l'authentification
    networks:
      - pg-net

networks:
  kafka-net:
    driver: bridge
  pg-net:
    driver: bridge